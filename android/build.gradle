buildscript {
    ext.kotlin_version = '2.0.0'
    repositories {
        mavenCentral()
        google()
        maven { url "https://mvn.mob.com/android" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //noinspection GradleDynamicVersion
        classpath "com.mob.sdk:MobSDK2:+"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            project.android {
                if (namespace == null) {
                    println "project namespace is $project.group"
                    namespace project.group
                }
                if (project.android.hasProperty('compileSdk')) {
                    if (project.android.compileSdk < 34) {
                        project.android.compileSdk 34
                    }
                }
                if (project.android.hasProperty('buildToolsVersion')) {
                    project.android.buildToolsVersion "34.0.0"
                }
                defaultConfig {
                    minSdkVersion 23

                    if (project.android.defaultConfig.hasProperty('compileSdkVersion')) {
                        if (project.android.defaultConfig.compileSdkVersion < 34) {
                            project.android.defaultConfig.compileSdkVersion 34
                        }
                    }

                    if (project.android.defaultConfig.hasProperty('targetSdk')) {
                        if (project.android.defaultConfig.targetSdk < 34) {
                            project.android.defaultConfig.targetSdk 34
                        }
                    }
                }
            }
        }
    }
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}

// 丢弃全部 test gradle task
gradle.startParameter.excludedTaskNames.addAll(
        gradle.startParameter.taskNames.findAll { it.contains("testClasses") }
)